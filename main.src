jmp :start;
sInitial:
$Hello and welcome to my bowl of Spaghetti!
$What program do you want to load?
$0. Exit
$1. Game of Life
$>.0
sInvalid:
$Invalid option, choose another one!
$>.0
sFinished:
$I really enjoyed this time spent with you.
$Come back soon!
$.0

$Input() -> :8, :7:
finput:
// Take the first letter of the input and store it at :8
in :8
.finputSkipFirst:
in :7
eq :7 :7 .10
jf :7 :.finputSkipFirst
ret

$Print(:8), :7:
fprint:
// Print every character starting at :8 and stopping at \0
// (first char is assumed not to be null)
rmem :7 :8
.fprintSkipFirst:
out :7
add :8 :8 .1
rmem :7 :8
jt :7 :.fprintSkipFirst
ret

$Game of Life:
gameOfLife:
print ->Not .32 Yet .10 .10
jmp :start

$Start:
start:
set :8 :sInitial
call :fprint
.startLoop:
call :finput

eq :7 :8 0
jt :7 :end

eq :7 :8 1
jt :7 :gameOfLife

set :8 :sInvalid
call :fprint
jmp :.startLoop

$End:
end:
set :8 :sFinished
call :fprint
halt